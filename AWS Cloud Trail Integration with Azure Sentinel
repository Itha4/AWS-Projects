# Integrating AWS logs to Azure Sentinel Workspace

 Hybrid clouds are fast becoming the new norm, organizations are now running their workloads across different clouds and having a one stop security management for all clouds would definitely be a good thing.
 Azure Sentinel offers visibility into the other clouds by allowing for intgeration with the clouds through different mechanisms. 
 I will be focusing on how to connect your Cloud Trail Logs to Azure Sentinel. Follow through and learn something.

Microsoft Sentinel is Azure‚Äôs SIEM, Security Incidents and Events Monitoring and SOAR, Security Orchestration and Automated Response tool. Sentinel is designed to provide a single solution for alert detection, threat visibility, proactive hunting and threat response.
Sentinel‚Äôs work is based on data collected from various resources. Sentinel offers integrations with other parties;
-	Integration with private infrastructure: by deploying Syslog servers as data collectors or by configuring endpoints to send data to azure directly
-	Integration with GPS: using REST SPIs, log collectors or by deploying a CASB, Cloud Access Security Broker.
-	Integration with AWS: using Cloud Trail which provides insights into user and network activity, the cloud trail logs can be integrated with Azure Sentinel.

AWS Cloud Trail is a web service that records API calls to supported AWS services in your AWS account an delivers a log file to your s3 bucket.
Benefits of Cloud Trail include;
-	There‚Äôs controlled access to log files: access to S3 log files is centrally controlled in AWS which allows for controlled access of the log files and helps maintain their integrity.
-	You can easily obtain alerts on Log File Creation and Misconfiguration
-	Cloud Trail allows you to manage changes to AWS resources and log files.
-	Offers an option to store logs for longer, logs can be stored for a year or longer or as per the organization‚Äôs chosen retention period.
-	Logs collected in Cloud Trail can be used to generate customized reports


Procedure: Connecting Azure Sentinel to AWS CloudTrail


Working on Azure Portal:

-	To start working with Microsoft Sentinel, Sentinel needs to be connected to an existing workspace or a new one to be created.
  see image: New or Existing Workspace on Sentinel.

  I chose to create a new workspace specific to this project. I assigned a name to it, chose my subscription, created a resource group for it and picked my location as east us. Deployment of the new workspace might take a few minutes. On clicking refresh, the newly created workspace should show alongside the other workspaces. Add Sentinel to the workspace and sentinel will now be ready for exploration.

  See image: Sentinel Workspace Creation.jpg and  Sentinel Workspaces.jpg

-	On the Sentinel overview page, click on Data Connectors on the left-side panel. Search for Amazon Web Services. The Amazon Web Services will come up and you see the prerequisites needed, configuration details. Take note of the account IDs as they will be used on the AWS portal to complete the connection. 

  See image: Sentinel Data Connectors.jpg

  On the left -side panel you can see that the accepted data types are AWSCLoudTrailLogs. On clicking the data types link, it leads to a page that shows how you can query your AWS logs using KQL. 

  See image: AWS Cloud Trail logs KQL querying.jpg
  
  Working on AWS Portal:
-	On the AWS portal search for IAM and on the left side panel click on roles.

See image: IAM Overview Page.jpg

-	Create a role: we need to create a role with read permissions to allow for connectivity between Azure and AWS. 
o	Choose to create an AWS account and select, ‚Äòanother AWS account‚Äô option. Use the Account ID from Azure Sentinel. 
o	Under Options, tick the checkbox that asks for an external ID and use the one form Sentinel.

See image: Create an AWS external account.

-	Add Permissions: You‚Äôll need to add read permissions to the role created. So, under permissions search for AWScloudTrail_ReadOnlyAccess and allow it

See image: AWS account add permissions.jpg

-	Add a name to the created role: assign a name to your role, that will be used again on the Azure Sentinel side.

See image: Assign name to created role.jpg

-	Once the review is done, create the role and if it is a successful operation, a role created message will be displayed with the name of your role.

See image: role created successfully.jpg

-	View the role to copy the ARN ID associated with it and paste it Azure Sentinel
See image: Created role ARN ID.jpg
Working on Azure Portal:

-	Validate the role created using its ARN ID on azure. A success message will be returned if it‚Äôs validated.

See image: Validate AWS role created on Azure.jpg
Now, your CloudTrail logs are integrated with Azure Sentinel and you can query them using KQL scripts as shown in the image.
See image: AWS integration to Azure Sentinel Success.jpg

KQl is an interesting topic that is important for security engineers, whether it‚Äôs writing the KQL scripts or understanding them. 
I‚Äôll be adding a repo on my KQl learnings.

‚òÅÔ∏èHappy Learning! üí°



